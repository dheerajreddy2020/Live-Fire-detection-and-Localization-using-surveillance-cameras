    1  nvidia-smi
    2  wget https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_460.32.03_linux.run
    3  sudo sh cuda_11.2.2_460.32.03_linux.run
    4  nano .bashrc 
    5  source .bashrc 
    6  echo $LD_LIBRARY_PATH
    7  echo $PATH
    8  git clone https://github.com/rameshkrishna/cudnn11.git
    9  ls
   10  cd cudnn11/
   11  ls
   12  git-lfs
   13  sudo apt install git-lfs
   14  git-lfs pull
   15  ls
   16  tar -xzvf cudnn-11.0-linux-x64-v8.0.4.30.tgz 
   17  sudo cp cuda/include/cudnn*.h /usr/local/cuda/include 
   18  sudo cp -P cuda/lib64/libcudnn* /usr/local/cuda/lib64 
   19  sudo chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*
   20  ls
   21  cmake --version
   22  cd ..
   23  wget https://github.com/Kitware/CMake/releases/download/v3.20.0-rc5/cmake-3.20.0-rc5.tar.gz
   24  ls
   25  tar -xf cmake-3.20.0-rc5.tar.gz 
   26  ls
   27  cd cmake-3.20.0-rc5/
   28  ls
   29  ./bootstrap
   30  cmake -version
   31  gcc
   32  gcc --version
   33  sudo apt install cmake
   34  cmake -version
   35  clear
   36  cd ..
   37  ls
   38  env compute_capability=30
   39  opencv
   40  git clone https://github.com/rameshkrishna/darkalex.git
   41  ls
   42  cd darkalex/
   43  ls
   44  python SetGPUonFire.py 
   45  python3
   46  python3 SetGPUonFire.py 
   47  sudo apt install libopencv-dev
   48  sed -i 's/OPENCV=0/OPENCV=1/g' Makefile
   49  sed -i 's/GPU=0/GPU=1/g' Makefile
   50  sed -i 's/CUDNN=0/CUDNN=1/g' Makefile
   51  sed -i "s/ARCH= -gencode arch=compute_60,code=sm_60/ARCH= ${ARCH_VALUE}/g" Makefile
   52  cmake
   53  make
   54  ./darknet
   55  ./darknet --help
   56  ./darknet detector demo coco.data fire.cfg fire.weights test.mp4 -dont_show -out_filename results.mp4
   57  ./darknet detector demo coco.data fire.cfg fire.weights -i 0 test.mp4
   58  cd data/
   59  ls
   60  nano classes.names
   61  cd ..
   62* ./darknet detector demo coco.data fire.cfg fire.weights test.mp4
   63  ls
   64  pip3 install gdown
   65  sudo apt install python3-p
   66  sudo apt install python3-pip
   67  pip3 install gdown
   68  gdown
   69  python3
   70  ls
   71  ./darknet detector demo coco.data fire.cfg fire.weights test.mp4 -dont_show -out_filename results.mp4
   72  ls
   73  ls -lh
   74  git status
   75  git add . 
   76  git lfs track "*.weights"
   77  git add . 
   78  git status
   79  git commit -m 're'
   80  git push
   81  ./darknet detect coco.data fire.cfg fire.weights fire.jpg -dont_show
   82  ls
   83  python3 darknet_video.py
   84  pip3 install opencv-contrib-python
   85  python3 darknet_video.py
   86  ls
   87  cd src/
   88  ls
   89  cd ..
   90  ls
   91  build.sh
   92  ./build.sh 
   93  python3 darknet_video.py
   94  ls
   95  cmake
   96  ./build
   97  sh ./build.sh
   98  ./build.sh 
   99  ./build.sh
  100  python3
  101  python3 darknet_video.py
  102  cd ..
  103  cd cmake-3.20.0-rc5/
  104  ls
  105  make install
  106  sudo apt install libssl-dev
  107  cmake . 
  108  make
  109  cmake -version
  110  make install 
  111  sudo make install 
  112  cmake -version
  113  sudo make install 
  114  sudo make
  115  sudo make install 
  116  cmake -version
  117  sudo ./bootstrap 
  118  sudo cmake .
  119  cmake -version
  120  ls
  121  cd ..
  122  ls
  123  cd darkalex/
  124  ls
  125  chmod +x darknet
  126  sudo cmake . 
  127  sudo make
  128  chmod +x *.sh
  129  sudo make
  130  make
  131  ls
  132  sed -i 's/OPENCV=0/OPENCV=1/g' Makefile
  133  sed -i 's/GPU=0/GPU=1/g' Makefile
  134  sed -i 's/CUDNN=0/CUDNN=1/g' Makefile
  135  sed -i "s/ARCH= -gencode arch=compute_60,code=sm_60/ARCH= ${ARCH_VALUE}/g" Makefile
  136  make
  137  ls
  138  ls -lh
  139  cmake
  140  ./build.sh
  141  sudo ./build.sh
  142  chmod +x *.sh
  143  sudo ./build.sh
  144  ls
  145  nano CMakeLists.txt 
  146  rm CMakeLists.txt 
  147  wget https://raw.githubusercontent.com/AlexeyAB/darknet/master/CMakeLists.txt
  148  ls
  149  sudo ./build.sh
  150  cd ..
  151  wget https://github.com/Kitware/CMake/releases/download/v3.18.6/cmake-3.18.6.tar.gz
  152  tar -xvf cmake-3.18.6.tar.gz 
  153  ls
  154  cd cmake-3.18.6/
  155  ls
  156  cmake . 
  157  sudo cmake . 
  158  cmake -version
  159  sudo make
  160  sudo make install
  161  cmake -version
  162  cd ..
  163  ls
  164  cd darkalex/
  165  sudo cmake . 
  166  ./build.sh
  167  clear
  168  ./build.sh
  169  wget https://raw.githubusercontent.com/AlexeyAB/darknet/master/CMakeLists.txt
  170  rm CMakeLists.txt
  171  rm CMakeLists.txt.1 
  172  wget https://raw.githubusercontent.com/AlexeyAB/darknet/master/CMakeLists.txt
  173  ./build.sh
  174  sudo ./build.sh
  175  make
  176  sed -i 's/OPENCV=0/OPENCV=1/g' Makefile
  177  sed -i 's/GPU=0/GPU=1/g' Makefile
  178  sed -i 's/CUDNN=0/CUDNN=1/g' Makefile
  179  sed -i "s/ARCH= -gencode arch=compute_60,code=sm_60/ARCH= ${ARCH_VALUE}/g" Makefile
  180  make
  181  cp Makefile.backup
  182  cp Makefile Makefile.backup
  183  rm Makefile
  184  nano Makefile
  185  sed -i 's/OPENCV=0/OPENCV=1/g' Makefile
  186  sed -i 's/GPU=0/GPU=1/g' Makefile
  187  sed -i 's/CUDNN=0/CUDNN=1/g' Makefile
  188  sed -i "s/ARCH= -gencode arch=compute_60,code=sm_60/ARCH= ${ARCH_VALUE}/g" Makefile
  189  make
  190  ls
  191  ./darknet 
  192  cd build
  193  ls
  194  cd darknet/
  195  ls
  196  cd ..
  197  ls
  198  cd ..
  199  ls
  200  nano CMakeCache.txt 
  201  clear
  202  ls
  203  python3 darknet_video.py 
  204  python3 darknet_video.py -v test.mp4 -c fire.cfg -w fire.weights -o output.mp4
  205  python3 darknet_video.py -h
  206  python3 darknet_video.py --input=test.mp4 --out_filename="outputnow.mp4" --weights=fire.weights --config_file fire.cfg --data=coco.data 
  207  python3
  208  python3 darknet_video.py --input=test.mp4 --out_filename="outputnow.mp4" --weights=fire.weights --config_file fire.cfg --data=coco.data 
  209  sudo apt autoremove
  210  pip3 install opencv-contrib-python
  211  python3 darknet_video.py --input=test.mp4 --out_filename="outputnow.mp4" --weights=fire.weights --config_file fire.cfg --data=coco.data 
  212  nvcc --version
  213  nvidia-smi
  214  python3 darknet_video.py --input=test.mp4 --out_filename="outputnow.mp4" --weights=fire.weights --config_file fire.cfg --data=coco.data 
  215  ls
  216  cd ..
  217  ls
  218  mkdir gdriveDarknet
  219  cd gdriveDarknet/
  220  ls
  221  python3
  222  ls
  223  c d..
  224  cd ..
  225  ls
  226  cd darkalex/
  227  ls
  228  nano Makefile
  229  nano Makefile.backup 
  230  sed -i 's/OPENCV=0/OPENCV=1/g' Makefile.backup 
  231  nano Makefile.backup 
  232  sed -i 's/GPU=0/GPU=1/g' Makefile.backup 
  233  nano Makefile.backup 
  234  sed -i 's/GPU=0/GPU=1/g' Makefile.backup
  235  nano Makefile.backup 
  236  sed -i "s/ARCH= -gencode arch=compute_60,code=sm_60/ARCH= ${ARCH_VALUE}/g" Makefile.backup 
  237  nano Makefile.backup 
  238  nano Makefile
  239  nano Makefile.backup 
  240  nano Makefile
  241  python3 SetGPUonFire.py 
  242  nano Makefile
  243  make
  244  python3 darknet_video.py --input=test.mp4 --out_filename="outputnow.mp4" --weights=fire.weights --config_file fire.cfg --data=coco.data 
  245  python3 darknet_video.py -h
  246  python3 darknet_video.py --input=test.mp4 --out_filename="outputnow.mp4" --weights=fire.weights --config_file fire.cfg --data=coco.data --dont_show
  247  ls
  248  git status
  249  git add . 
  250  git push
  251  git commit -m ' out'
  252  git push
  253  ls
  254  nano videout.py
  255  python3 videout.py 
  256  python3 darknet_video.py -v test.mp4 -c fire.cfg -w fire.weights -o output.mp4
  257  python3 videout.py -v test.mp4 -c fire.cfg -w fire.weights -o output.mp4
  258  python3 videout.py -v test.mp4 -c fire.cfg -w fire.weights -o output.mp4 -m=coco.data
  259  python3 videout.py -v test.mp4 -c fire.cfg -w fire.weights -o output.mp4 -m=coco.data-l=data/classes.names 
  260  python3 videout.py -v test.mp4 -c fire.cfg -w fire.weights -o output.mp4 -m=coco.data -l=data/classes.names 
  261  sudo apt install ffmpeg
  262  python3 darknet_video.py --input=test.mp4 --out_filename="outputrk.mp4" --weights=fire.weights --config_file fire.cfg --data=coco.data --dont_show
  263  git add .
  264  git commit -m 'kl'
  265  git push
  266  ffmpeg -y -i outputrk.mp4 -vcodec libx264 demo_output.mp4
  267  git add .
  268  git status
  269  git commit -m 'klk'
  270  git push
  271  ls
  272  python3 darknet_video.py -h
  273  python3 darknet_video.py --input=test.mp4 --out_filename="outputrk.mp4" --weights=fire.weights --config_file fire.cfg --data=coco.data --dont_show --ext_output
  274* 
  275  ls
  276  streamlit run webapp.py 
  277  streamlit run webapp.py
  278  ls
  279  nano webapp.py 
  280  pip3 install streamlit
  281  streamlit run webapp.py
  282  ls
  283  streamlit run webapp.pyls
  284  ls
  285  mkdir tempVideos
  286  rm -R tempVideos/
  287  mkdir tempvideos
  288  ls
  289  cd tempvideos/
  290  ls
  291  ls -lh
  292  history 
  293  history > his.txt
  294  git status
  295  ls
  296  rm tmpymol8pto 
  297  cd ..
  298  history > hist.txt
